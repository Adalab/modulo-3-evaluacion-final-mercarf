{"version":3,"sources":["images/humano.svg","images/hombre.png","images/mujer-color.png","images/extraterrestre.png","images/femenino.svg","images/masculino.svg","images/interrogacion-color.svg","images/corazon-rosa.svg","images/tumba.png","Services/getDataFromApi.js","Components/CharacterCard.js","Components/CharacterList.js","Components/Leyend.js","Components/CharacterDetail.js","Components/Filters.js","Components/App.js","index.js"],"names":["module","exports","getDataFromApi","fetch","then","response","json","data","results","CharacterCard","props","to","id","className","species","src","image","alt","name","CharacterList","characters","length","filterName","charactersList","map","character","key","Leyend","useState","activeCollapsible","setActiveCollapsible","onClick","ev","clickedLeyend","currentTarget","humanLogo","manLogo","womanLogo","gender","title","alienLogo","femaleLogo","maleLogo","unknownLogo","status","aliveLogo","deathLogo","CharacterDetail","origin","episode","deadLogo","Filters","onSubmit","preventDefault","htmlFor","type","value","onChange","handleFilters","target","placeholder","clickedFilterSection","filterSpecies","filterStatus","filterGender","App","setCharacters","localStorage","getItem","setFilterName","setFilterSpecies","setFilterStatus","setFilterGender","console","log","useEffect","setItem","exact","path","sort","a","b","toLowerCase","filter","toUpperCase","includes","render","routeCharacterId","match","params","characterId","find","parseInt","ReactDOM","document","getElementById"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,6MCS5BC,G,MARQ,WACrB,OAAOC,MAAM,8CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OAAOA,EAAKC,aCoBHC,EApBO,SAACC,GACrB,OACE,kBAAC,IAAD,CAAMC,GAAE,qBAAgBD,EAAME,KAC5B,wBAAIC,UAAS,sCAAiCH,EAAMI,UAClD,yBAAKD,UAAU,8BACb,yBACEA,UAAU,kCACVE,IAAKL,EAAMM,MACXC,IAAKP,EAAMQ,QAGf,wBAAIL,UAAU,+BAA+BH,EAAMQ,MACnD,wBAAIL,UAAS,yCAAoCH,EAAMI,UACpDJ,EAAMI,YCYFK,EAzBO,SAACT,GAErB,GAAgC,IAA5BA,EAAMU,WAAWC,OACnB,OACE,uBAAGR,UAAU,qBAAb,kEAC2DH,EAAMY,WADjE,MAOJ,IAAMC,EAAiBb,EAAMU,WAAWI,KAAI,SAACC,GAC3C,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAUb,GACfA,GAAIa,EAAUb,GACdI,MAAOS,EAAUT,MACjBE,KAAMO,EAAUP,KAChBJ,QAASW,EAAUX,aAIzB,OAAO,wBAAID,UAAU,mBAAmBU,I,iKCkH3BI,EA/HA,SAACjB,GAAW,IAAD,EAC0BkB,mBAAS,IADnC,mBACjBC,EADiB,KACEC,EADF,KAYxB,OACE,yBAAKjB,UAAU,WACb,yBACEA,UAAS,eACTD,GAAG,cACHmB,QAdoB,SAACC,GACzB,IAAMC,EAAgBD,EAAGE,cAActB,GACvC,OACSkB,EADLG,IAAkBJ,EACQ,GAEAI,KAW1B,wBAAIpB,UAAU,sBAAd,WACA,0BAAMA,UAAU,QACd,uBACEA,UAAS,8BACe,gBAAtBgB,EAAsC,YAAc,QAK5D,yBACEhB,UAAS,uBACe,gBAAtBgB,EAAsC,YAAc,KAGtD,yBAAKhB,UAAU,wBACb,wBAAIA,UAAU,SAAd,YACA,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,sCACA,yBACEE,IAAKoB,IACLlB,IAAKP,EAAMI,QACXD,UAAU,gBAEZ,wBAAIA,UAAU,UACZ,wBAAIA,UAAU,kBACZ,oCACA,yBACEE,IAAKqB,IACLnB,IAAKP,EAAMI,QACXD,UAAU,iBAGd,wBAAIA,UAAU,gBACZ,qCACA,yBACEE,IAAKsB,IACLpB,IAAKP,EAAM4B,OACXC,MAAO7B,EAAM4B,OACbzB,UAAU,mBAKlB,yBAAKA,UAAU,wCACb,qCACA,yBACEE,IAAKyB,IACLvB,IAAKP,EAAMI,QACXD,UAAU,gBAEZ,wBAAIA,UAAU,UACZ,wBAAIA,UAAU,kBACZ,uCACA,yBACEE,IAAK0B,IACLxB,IAAKP,EAAM4B,OACXzB,UAAU,iBAGd,wBAAIA,UAAU,gBACZ,wCACA,yBACEE,IAAK2B,IACLzB,IAAKP,EAAM4B,OACXzB,UAAU,qBAOtB,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,SAAd,UACA,yBAAKA,UAAU,UACb,6BACE,0CACA,yBACEE,IAAK4B,IACL1B,IAAKP,EAAMkC,OACX/B,UAAU,iBAGd,yBAAKA,UAAU,eACb,yBAAKA,UAAU,SACb,mCACA,yBACEE,IAAK8B,IACL5B,IAAKP,EAAMkC,OACX/B,UAAU,iBAGd,yBAAKA,UAAU,SACb,qCACA,yBACEE,IAAK+B,IACL7B,IAAKP,EAAMkC,OACX/B,UAAU,uBCbbkC,EArGS,SAACrC,GAkCvB,OACE,yBAAKG,UAAU,qBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,wBAAwBH,EAAMQ,MAC5C,kBAAC,IAAD,CAAMP,GAAG,KACP,0BAAME,UAAU,wCAGpB,yBAAKA,UAAU,gBACb,yBACEA,UAAU,sBACVE,IAAKL,EAAMM,MACXC,IAAKP,EAAMQ,OAEb,yBAAKL,UAAU,wBACb,wBAAIA,UAAU,yBACZ,4BACE,uCACA,2BAAIH,EAAMsC,SAEZ,4BACE,0CACA,2BAAItC,EAAMuC,WAGd,wBAAIpC,UAAU,yBACZ,4BACE,wCAEA,yBACEE,IAnDQ,UAAlBL,EAAMI,QACDqB,IACoB,UAAlBzB,EAAMI,QACR0B,SADF,EAkDOvB,IAAKP,EAAMI,QACXD,UAAU,iBAGd,4BACE,2CAEA,yBACEE,IAnDO,WAAjBL,EAAM4B,QAAyC,UAAlB5B,EAAMI,QAC9BuB,IACmB,SAAjB3B,EAAM4B,QAAuC,UAAlB5B,EAAMI,QACnCsB,IACmB,WAAjB1B,EAAM4B,QAAyC,UAAlB5B,EAAMI,QACrC2B,IACmB,SAAjB/B,EAAM4B,QAAuC,UAAlB5B,EAAMI,QACnC4B,SADF,EA8COzB,IAAKP,EAAM4B,OACXzB,UAAU,iBAGd,4BACE,6CAEA,yBACEE,IAhFO,UAAjBL,EAAMkC,OACDC,IACmB,SAAjBnC,EAAMkC,OACRM,IAEAP,IA4EK1B,IAAKP,EAAMkC,OACX/B,UAAU,qBAOtB,kBAAC,EAAD,CACEC,QAASJ,EAAMI,QACfwB,OAAQ5B,EAAM4B,OACdM,OAAQlC,EAAMkC,WCmBPO,EA9HC,SAACzC,GAEf,IAFyB,EAgCyBkB,mBAAS,IAhClC,mBAgClBC,EAhCkB,KAgCCC,EAhCD,KA2CzB,OACE,0BAAMjB,UAAU,OAAOuC,SAhBK,SAACpB,GAC7BA,EAAGqB,mBAgBD,2BAAOxC,UAAU,cAAcyC,QAAQ,cAAvC,gCAGA,2BACEC,KAAK,OACL1C,UAAU,qBACVD,GAAG,aACH4C,MAAO9C,EAAMY,WACbmC,SAnDmB,SAACzB,GACxBtB,EAAMgD,cAAc,CAClBhC,IAAK,aACL8B,MAAOxB,EAAG2B,OAAOH,SAiDfI,YAAY,yBAEd,yBAAK/C,UAAU,mBACb,yBACEA,UAAU,uBACVD,GAAG,cACHmB,QA1BkB,SAACC,GACzB,IAAM6B,EAAuB7B,EAAGE,cAActB,GAC9C,OACSkB,EADL+B,IAAyBhC,EACC,GAEAgC,KAuBxB,wBAAIhD,UAAU,+BAAd,WACA,0BAAMA,UAAU,8BACd,uBACEA,UAAS,8BACe,gBAAtBgB,EAAsC,YAAc,QAK5D,8BACEhB,UAAS,iCACe,gBAAtBgB,EAAsC,YAAc,KAGtD,yBAAKhB,UAAU,cACb,2BAAOyC,QAAQ,gBAAgBzC,UAAU,gBAAzC,YAGA,4BACED,GAAG,gBACH4C,MAAO9C,EAAMoD,cACbL,SA3EgB,SAACzB,GAC3BtB,EAAMgD,cAAc,CAClBhC,IAAK,gBACL8B,MAAOxB,EAAG2B,OAAOH,UA0ET,4BAAQA,MAAM,OAAd,SACA,4BAAQA,MAAM,SAAd,UACA,4BAAQA,MAAM,SAAd,WAIJ,yBAAK3C,UAAU,cACb,2BAAOyC,QAAQ,eAAezC,UAAU,gBAAxC,iBAGA,4BACED,GAAG,eACH4C,MAAO9C,EAAMqD,aACbN,SApFe,SAACzB,GAC1BtB,EAAMgD,cAAc,CAClBhC,IAAK,eACL8B,MAAOxB,EAAG2B,OAAOH,UAmFT,4BAAQA,MAAM,OAAd,SACA,4BAAQA,MAAM,SAAd,QACA,4BAAQA,MAAM,QAAd,UACA,4BAAQA,MAAM,WAAd,iBAGJ,yBAAK3C,UAAU,cACb,2BAAOyC,QAAQ,eAAezC,UAAU,gBAAxC,cAGA,4BACED,GAAG,eACH4C,MAAO9C,EAAMsD,aACbP,SA7Fe,SAACzB,GAC1BtB,EAAMgD,cAAc,CAClBhC,IAAK,eACL8B,MAAOxB,EAAG2B,OAAOH,UA4FT,4BAAQA,MAAM,OAAd,SACA,4BAAQA,MAAM,UAAd,YACA,4BAAQA,MAAM,QAAd,mBC6BCS,EA9IH,WAAO,IAAD,EACoBrC,mBAAS,IAD7B,mBACTR,EADS,KACG8C,EADH,OAIoBtC,mBAClCuC,aAAaC,QAAQ,eAAiB,IALxB,mBAIT9C,EAJS,KAIG+C,EAJH,OAO0BzC,mBAAS,OAPnC,mBAOTkC,EAPS,KAOMQ,EAPN,OAQwB1C,mBAAS,OARjC,mBAQTmC,EARS,KAQKQ,EARL,OASwB3C,mBAAS,OATjC,mBASToC,EATS,KASKQ,EATL,KAUhBC,QAAQC,IAAIpD,GAKZqD,qBAAU,WACRzE,IAAiBE,MAAK,SAACG,GACrB2D,EAAc3D,QAEf,IAGHoE,qBAAU,WACRR,aAAaS,QAAQ,aAActD,KAClC,CAACA,IAsFJ,OACE,yBAAKT,UAAU,OACb,4BAAQA,UAAU,UAChB,kBAAC,IAAD,CAAMF,GAAG,KACP,yBAAKE,UAAU,kBAGnB,0BAAMA,UAAU,QACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CACExD,WAAYA,EACZwC,cAAeA,EACfC,aAAcA,EACdC,aAAcA,EACdN,cA5DU,SAACnD,GACJ,eAAbA,EAAKmB,IACP2C,EAAc9D,EAAKiD,OACG,kBAAbjD,EAAKmB,IACd4C,EAAiB/D,EAAKiD,OACA,iBAAbjD,EAAKmB,IACd6C,EAAgBhE,EAAKiD,OACC,iBAAbjD,EAAKmB,KACd8C,EAAgBjE,EAAKiD,UAsDf,kBAAC,EAAD,CACElC,WAAYA,EACZF,YAvEVA,EAAW2D,MAAK,SAACC,EAAGC,GAAJ,OACdD,EAAE9D,KAAKgE,cAAgBD,EAAE/D,KAAKgE,cAAgB,GAAK,KAqB9C9D,EACJ+D,QAAO,SAAC1D,GAIP,OAHmBA,EAAUP,KAC1BkE,cACAC,SAAS/D,EAAW8D,kBAGxBD,QAAO,SAAC1D,GACP,MAAsB,QAAlBqC,GAGKrC,EAAUX,UAAYgD,KAGhCqB,QAAO,SAAC1D,GACP,MAAqB,QAAjBsC,GAGKtC,EAAUmB,SAAWmB,KAG/BoB,QAAO,SAAC1D,GACP,MAAqB,QAAjBuC,GAGKvC,EAAUa,SAAW0B,SA2B5B,kBAAC,IAAD,CACEc,KAAK,0BACLQ,OAzGoB,SAAC5E,GAC7B,IAAM6E,EAAmB7E,EAAM8E,MAAMC,OAAOC,YACtCjE,EAAYL,EAAWuE,MAC3B,SAAClE,GAAD,OAAeA,EAAUb,KAAOgF,SAASL,MAG3C,OAAI9D,EAEA,kBAAC,EAAD,CACEP,KAAMO,EAAUP,KAChBF,MAAOS,EAAUT,MACjBF,QAASW,EAAUX,QACnBwB,OAAQb,EAAUa,OAClBU,OAAQvB,EAAUuB,OAAO9B,KACzB0B,OAAQnB,EAAUmB,OAClBK,QAASxB,EAAUwB,QAAQ5B,SAK7B,uBAAGR,UAAU,2BAAb,4CCnDRgF,IAASP,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFQ,SAASC,eAAe,W","file":"static/js/main.aee91ebd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/humano.ecdb8c30.svg\";","module.exports = __webpack_public_path__ + \"static/media/hombre.56e66f84.png\";","module.exports = __webpack_public_path__ + \"static/media/mujer-color.2db113dd.png\";","module.exports = __webpack_public_path__ + \"static/media/extraterrestre.c97d4566.png\";","module.exports = __webpack_public_path__ + \"static/media/femenino.5d546c1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/masculino.f1289af3.svg\";","module.exports = __webpack_public_path__ + \"static/media/interrogacion-color.da96d8da.svg\";","module.exports = __webpack_public_path__ + \"static/media/corazon-rosa.cc33e1c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/tumba.dba42fdb.png\";","// Funcion que recoge los datos del API\r\nconst getDataFromApi = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character/')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results;\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* Este componente muestra la previsualización de cada tarjeta */\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link to={`/character/${props.id}`}>\r\n      <li className={`character__list__card list__${props.species}`}>\r\n        <div className='character__list__card__box'>\r\n          <img\r\n            className='character__list__card__box__img'\r\n            src={props.image}\r\n            alt={props.name}\r\n          />\r\n        </div>\r\n        <h2 className='character__list__card__name'>{props.name}</h2>\r\n        <h3 className={`character__list__card__species ${props.species}`}>\r\n          {props.species}\r\n        </h3>\r\n      </li>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from 'react';\r\nimport CharacterCard from './CharacterCard';\r\n\r\n/* Este componente muestra el listado de tarjetas de personaje */\r\n\r\nconst CharacterList = (props) => {\r\n  //Si no hay ninguna tarjeta mostrada (al no cumplirse el includes()), aparece un error\r\n  if (props.characters.length === 0) {\r\n    return (\r\n      <p className='characterNotFound'>\r\n        {`No hay ningún personaje que coincida con la palabra \"${props.filterName}\"`}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  // Mapeamos la lista de tarjetas de personaje, pasándole las props al CharacterCard\r\n  const charactersList = props.characters.map((character) => {\r\n    return (\r\n      <CharacterCard\r\n        key={character.id}\r\n        id={character.id}\r\n        image={character.image}\r\n        name={character.name}\r\n        species={character.species}\r\n      />\r\n    );\r\n  });\r\n  return <ul className='character__list'>{charactersList}</ul>;\r\n};\r\n\r\nexport default CharacterList;\r\n","import React, { useState } from 'react';\r\nimport '../Stylsheets/leyend.scss';\r\nimport humanLogo from '../images/humano.svg';\r\nimport womanLogo from '../images/hombre.png';\r\nimport manLogo from '../images/mujer-color.png';\r\nimport alienLogo from '../images/extraterrestre.png';\r\nimport femaleLogo from '../images/femenino.svg';\r\nimport maleLogo from '../images/masculino.svg';\r\nimport unknownLogo from '../images/interrogacion-color.svg';\r\nimport aliveLogo from '../images/corazon-rosa.svg';\r\nimport deathLogo from '../images/tumba.png';\r\n\r\n/* Este componente muestra la leyenda */\r\n\r\nconst Leyend = (props) => {\r\n  const [activeCollapsible, setActiveCollapsible] = useState('');\r\n\r\n  const changeCollapsible = (ev) => {\r\n    const clickedLeyend = ev.currentTarget.id;\r\n    if (clickedLeyend === activeCollapsible) {\r\n      return setActiveCollapsible('');\r\n    } else {\r\n      return setActiveCollapsible(clickedLeyend);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='leyend '>\r\n      <div\r\n        className={`leyend__box `}\r\n        id='collapsible'\r\n        onClick={changeCollapsible}\r\n      >\r\n        <h2 className='leyend__box__title'>Leyenda</h2>\r\n        <span className='icon'>\r\n          <i\r\n            className={`fas fa-chevron-down ${\r\n              activeCollapsible === 'collapsible' ? 'transform' : ''\r\n            }`}\r\n          />\r\n        </span>\r\n      </div>\r\n      <div\r\n        className={`leyend__list ${\r\n          activeCollapsible === 'collapsible' ? 'notHidden' : ''\r\n        }`}\r\n      >\r\n        <div className='leyend__list__title1'>\r\n          <h3 className='title'>Especies</h3>\r\n          <div className='leyend__list__title1__species'>\r\n            <div className='leyend__list__title1__species__human'>\r\n              <h4>Humano</h4>\r\n              <img\r\n                src={humanLogo}\r\n                alt={props.species}\r\n                className='leyend-logo'\r\n              />\r\n              <ul className='gender'>\r\n                <li className='gender__female'>\r\n                  <p>Mujer</p>\r\n                  <img\r\n                    src={manLogo}\r\n                    alt={props.species}\r\n                    className='leyend-logo'\r\n                  />\r\n                </li>\r\n                <li className='gender__male'>\r\n                  <p>Hombre</p>\r\n                  <img\r\n                    src={womanLogo}\r\n                    alt={props.gender}\r\n                    title={props.gender}\r\n                    className='leyend-logo'\r\n                  />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className='leyend__list__title1__species__alien'>\r\n              <h4>Alien</h4>\r\n              <img\r\n                src={alienLogo}\r\n                alt={props.species}\r\n                className='leyend-logo'\r\n              />\r\n              <ul className='gender'>\r\n                <li className='gender__female'>\r\n                  <p>Femenino</p>\r\n                  <img\r\n                    src={femaleLogo}\r\n                    alt={props.gender}\r\n                    className='leyend-logo'\r\n                  />\r\n                </li>\r\n                <li className='gender__male'>\r\n                  <p>Masculino</p>\r\n                  <img\r\n                    src={maleLogo}\r\n                    alt={props.gender}\r\n                    className='leyend-logo'\r\n                  />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='leyend__list__title2'>\r\n          <h3 className='title'>Estado</h3>\r\n          <div className='status'>\r\n            <div>\r\n              <p>Desconocido</p>\r\n              <img\r\n                src={unknownLogo}\r\n                alt={props.status}\r\n                className='leyend-logo'\r\n              />\r\n            </div>\r\n            <div className='alive-death'>\r\n              <div className='alive'>\r\n                <p>Vivo</p>\r\n                <img\r\n                  src={aliveLogo}\r\n                  alt={props.status}\r\n                  className='leyend-logo'\r\n                />\r\n              </div>\r\n              <div className='death'>\r\n                <p>Muerto</p>\r\n                <img\r\n                  src={deathLogo}\r\n                  alt={props.status}\r\n                  className='leyend-logo'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leyend;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Leyend from './Leyend';\r\n// Imágenes/iconos importados\r\nimport humanLogo from '../images/humano.svg';\r\nimport womanLogo from '../images/mujer-color.png';\r\nimport manLogo from '../images/hombre.png';\r\nimport alienLogo from '../images/extraterrestre.png';\r\nimport femaleLogo from '../images/femenino.svg';\r\nimport maleLogo from '../images/masculino.svg';\r\nimport unknownLogo from '../images/interrogacion-color.svg';\r\nimport aliveLogo from '../images/corazon-rosa.svg';\r\nimport deadLogo from '../images/tumba.png';\r\n\r\n/* Este componente muestra el detalle de cada personaje */\r\n\r\nconst CharacterDetail = (props) => {\r\n  // Función para cambiar el estado de cada personaje por una imagen\r\n  const changeImgStatus = () => {\r\n    if (props.status === 'Alive') {\r\n      return aliveLogo;\r\n    } else if (props.status === 'Dead') {\r\n      return deadLogo;\r\n    } else {\r\n      return unknownLogo;\r\n    }\r\n  };\r\n\r\n  // Función para cambiar la especie de cada personaje por una imagen\r\n  const changeImgSpecies = () => {\r\n    if (props.species === 'Human') {\r\n      return humanLogo;\r\n    } else if (props.species === 'Alien') {\r\n      return alienLogo;\r\n    }\r\n  };\r\n\r\n  // Función para cambiar el género de cada personaje por una imagen\r\n  const changeImgGender = () => {\r\n    if (props.gender === 'Female' && props.species === 'Human') {\r\n      return womanLogo;\r\n    } else if (props.gender === 'Male' && props.species === 'Human') {\r\n      return manLogo;\r\n    } else if (props.gender === 'Female' && props.species === 'Alien') {\r\n      return femaleLogo;\r\n    } else if (props.gender === 'Male' && props.species === 'Alien') {\r\n      return maleLogo;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='character__detail'>\r\n      <div className='content'>\r\n        <div className='content__title'>\r\n          <h2 className='content__title__name'>{props.name}</h2>\r\n          <Link to='/'>\r\n            <span className='content__title__icon fas fa-times'></span>\r\n          </Link>\r\n        </div>\r\n        <div className='content__box'>\r\n          <img\r\n            className='content__box__image'\r\n            src={props.image}\r\n            alt={props.name}\r\n          />\r\n          <div className='content__description'>\r\n            <ul className='content__description1'>\r\n              <li>\r\n                <h4>Origen:</h4>\r\n                <p>{props.origin}</p>\r\n              </li>\r\n              <li>\r\n                <h4>Episodios:</h4>\r\n                <p>{props.episode}</p>\r\n              </li>\r\n            </ul>\r\n            <ul className='content__description2'>\r\n              <li>\r\n                <h4>Especie:</h4>\r\n                {/* <p>{props.species}</p> */}\r\n                <img\r\n                  src={changeImgSpecies()}\r\n                  alt={props.species}\r\n                  className='detail-logo'\r\n                />\r\n              </li>\r\n              <li>\r\n                <h4>Género: </h4>\r\n                {/* <p>{props.gender}</p> */}\r\n                <img\r\n                  src={changeImgGender()}\r\n                  alt={props.gender}\r\n                  className='detail-logo'\r\n                />\r\n              </li>\r\n              <li>\r\n                <h4>Estado vital:</h4>\r\n                {/* <p>{props.status}</p> */}\r\n                <img\r\n                  src={changeImgStatus()}\r\n                  alt={props.status}\r\n                  className='detail-logo'\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Leyend\r\n        species={props.species}\r\n        gender={props.gender}\r\n        status={props.status}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React, { useState } from 'react';\r\n\r\n/* Este componente muestra el menú de filtrado */\r\n\r\nconst Filters = (props) => {\r\n  // Recogemos el valor introducido en el input y lo pasamos por lifting al componente manejador App\r\n  const handleFilterName = (ev) => {\r\n    props.handleFilters({\r\n      key: 'filterName',\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n  const handleFilterSpecies = (ev) => {\r\n    props.handleFilters({\r\n      key: 'filterSpecies',\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n  const handleFilterStatus = (ev) => {\r\n    props.handleFilters({\r\n      key: 'filterStatus',\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n  const handleFilterGender = (ev) => {\r\n    props.handleFilters({\r\n      key: 'filterGender',\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n\r\n  // Prevenimos las acciones por defecto, como que refresque al pulsar tecla enter\r\n  const preventDefaultActions = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const [activeCollapsible, setActiveCollapsible] = useState('');\r\n\r\n  const changeCollapsible = (ev) => {\r\n    const clickedFilterSection = ev.currentTarget.id;\r\n    if (clickedFilterSection === activeCollapsible) {\r\n      return setActiveCollapsible('');\r\n    } else {\r\n      return setActiveCollapsible(clickedFilterSection);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='form' onSubmit={preventDefaultActions}>\r\n      <label className='form__label' htmlFor='filterName'>\r\n        Busca tu personaje favorito:\r\n      </label>\r\n      <input\r\n        type='text'\r\n        className='form__label__input'\r\n        id='filterName'\r\n        value={props.filterName}\r\n        onChange={handleFilterName}\r\n        placeholder='Nombre del personaje'\r\n      ></input>\r\n      <div className='filter__section'>\r\n        <div\r\n          className='filter__section__box'\r\n          id='collapsible'\r\n          onClick={changeCollapsible}\r\n        >\r\n          <h3 className='filter__section__box__title'>Filtros</h3>\r\n          <span className='filter__section__box__icon'>\r\n            <i\r\n              className={`fas fa-chevron-down ${\r\n                activeCollapsible === 'collapsible' ? 'transform' : ''\r\n              }`}\r\n            />\r\n          </span>\r\n        </div>\r\n        <fieldset\r\n          className={`filter__section__field ${\r\n            activeCollapsible === 'collapsible' ? 'notHidden' : ''\r\n          }`}\r\n        >\r\n          <div className='filter-box'>\r\n            <label htmlFor='filterSpecies' className='form__label '>\r\n              Especie:\r\n            </label>\r\n            <select\r\n              id='filterSpecies'\r\n              value={props.filterSpecies}\r\n              onChange={handleFilterSpecies}\r\n            >\r\n              <option value='all'>Todas</option>\r\n              <option value='Human'>Humano</option>\r\n              <option value='Alien'>Alien</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className='filter-box'>\r\n            <label htmlFor='filterStatus' className='form__label '>\r\n              Estado vital:\r\n            </label>\r\n            <select\r\n              id='filterStatus'\r\n              value={props.filterStatus}\r\n              onChange={handleFilterStatus}\r\n            >\r\n              <option value='all'>Todos</option>\r\n              <option value='Alive'>Vivo</option>\r\n              <option value='Dead'>Muerto</option>\r\n              <option value='unknown'>Desconocido</option>\r\n            </select>\r\n          </div>\r\n          <div className='filter-box'>\r\n            <label htmlFor='filterGender' className='form__label '>\r\n              Género:\r\n            </label>\r\n            <select\r\n              id='filterGender'\r\n              value={props.filterGender}\r\n              onChange={handleFilterGender}\r\n            >\r\n              <option value='all'>Todos</option>\r\n              <option value='Female'>Femenino</option>\r\n              <option value='Male'>Masculino</option>\r\n            </select>\r\n          </div>\r\n        </fieldset>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport '../Stylsheets/App.scss';\nimport getDataFromApi from '../Services/getDataFromApi';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport Filters from './Filters';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  /* El estado por defecto del filterName será, o vacío, o el valor que haya \n  guardado en el LOCALSTORAGE */\n  const [filterName, setFilterName] = useState(\n    localStorage.getItem('filterName') || ''\n  );\n  const [filterSpecies, setFilterSpecies] = useState('all');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [filterGender, setFilterGender] = useState('all');\n  console.log(filterName);\n\n  /* Realizamos acciones en las diferentes fases del CICLO DE VIDA */\n\n  // 1. Llamamos a los datos del API\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []);\n\n  // 2. Guardamos en el LOCALSTORAGE el valor introducido en el input\n  useEffect(() => {\n    localStorage.setItem('filterName', filterName);\n  }, [filterName]);\n\n  /* ------------------------------------------------------------- */\n\n  //Función que se encarga de pintar el detalle de las tarjetas\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = props.match.params.characterId;\n    const character = characters.find(\n      (character) => character.id === parseInt(routeCharacterId)\n    );\n    // Si el url de la barra de busqueda/personaje existe, me pintas la tarjeta, sino el error\n    if (character) {\n      return (\n        <CharacterDetail\n          name={character.name}\n          image={character.image}\n          species={character.species}\n          gender={character.gender}\n          origin={character.origin.name}\n          status={character.status}\n          episode={character.episode.length}\n        />\n      );\n    } else {\n      return (\n        <p className='characterDetailNotFound'>\n          El personaje que buscas no existe\n        </p>\n      );\n    }\n  };\n\n  // Función para ordenar alfabéticamente los personajes\n  const orderName = () => {\n    characters.sort((a, b) =>\n      a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1\n    );\n  };\n\n  /* Función por LIFTING, recogemos el valor introducido en el input y los select\n   y actualizamos el estado de cada filtro */\n  const handleFilters = (data) => {\n    if (data.key === 'filterName') {\n      setFilterName(data.value);\n    } else if (data.key === 'filterSpecies') {\n      setFilterSpecies(data.value);\n    } else if (data.key === 'filterStatus') {\n      setFilterStatus(data.value);\n    } else if (data.key === 'filterGender') {\n      setFilterGender(data.value);\n    }\n  };\n\n  /* Función que se encarga de pintar/filtrar las tarjetas por nombre, especie, estado y género */\n  const renderFilteredCharacter = () => {\n    orderName();\n    return characters\n      .filter((character) => {\n        const characters = character.name\n          .toUpperCase()\n          .includes(filterName.toUpperCase());\n        return characters;\n      })\n      .filter((character) => {\n        if (filterSpecies === 'all') {\n          return true;\n        } else {\n          return character.species === filterSpecies;\n        }\n      })\n      .filter((character) => {\n        if (filterStatus === 'all') {\n          return true;\n        } else {\n          return character.status === filterStatus;\n        }\n      })\n      .filter((character) => {\n        if (filterGender === 'all') {\n          return true;\n        } else {\n          return character.gender === filterGender;\n        }\n      });\n  };\n\n  return (\n    <div className='App'>\n      <header className='header'>\n        <Link to='/'>\n          <div className='header__img'></div>\n        </Link>\n      </header>\n      <main className='main'>\n        <Switch>\n          <Route exact path='/'>\n            <Filters\n              filterName={filterName}\n              filterSpecies={filterSpecies}\n              filterStatus={filterStatus}\n              filterGender={filterGender}\n              handleFilters={handleFilters}\n            />\n            <CharacterList\n              filterName={filterName}\n              characters={renderFilteredCharacter()}\n            />\n          </Route>\n          <Route\n            path='/character/:characterId'\n            render={renderCharacterDetail}\n          />\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './Stylsheets/index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}